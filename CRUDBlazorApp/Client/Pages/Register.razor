@page "/register"
@inject IAuthen Authen

<h3>Register</h3>

<PageTitle>Register User</PageTitle>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="mx-2">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)"/>
    </div>
    <div class="mx-2">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mx-2">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    
    <!--<ValidationSummary />-->
</EditForm>

<div>
    <p>@message</p>
</div>

@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;


    async Task HandleRegistration()
    {
        var result = await Authen.Register(user);
        message = result.Message;
        if (!result.Success)
        {
            message = "The user already exists.";
        }
        else
        {
            message = result.Message;
        }
    }
    
   
}
