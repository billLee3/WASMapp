@page "/project"
@page "/project/{id:int}"
@inject IProjectService ProjectService
@inject IAuthen Authen
@attribute [Authorize]

@if (Id == null)
{
    <PageTitle>Create a new project</PageTitle>
    <h3>Create a new project</h3>
}
else
{
    <PageTitle>Edit @project.Name</PageTitle>
    <h3>Edit @project.Name</h3>
}



    <EditForm Model="project" OnSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <div class="form-group row">
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="project.Name" class="form-control"></InputText>
        <ValidationMessage For="@(() => project.Name)"/>
    </div>
    <div class="form-group row">
        <label for="type">Type</label>
        <InputText id="type" @bind-Value="project.Type" class="form-control"></InputText>
        <ValidationMessage For="@(() => project.Type)" />
    </div>
    <div class="form-group row">
        <label for="status">Status</label>
        <InputText id="status" @bind-Value="project.Status" class="form-control"></InputText>
        <ValidationMessage For="@(() => project.Status)" />
    </div>
    <div class="form-group row">
        <label for="address">Address Name</label>
        <InputText id="address" @bind-Value="project.AddressName" class="form-control"></InputText>
        <ValidationMessage For="@(() => project.AddressName)" />
    </div>
    <div class="form-group row">
        <label for="city">City</label>
        <InputText id="city" @bind-Value="project.City" class="form-control"></InputText>
        <ValidationMessage For="@(() => project.City)" />
    </div>
    <div class="form-group row">
        
        <label for="state">State</label>
        <InputText id="state" @bind-Value="project.State" class="form-control"></InputText>
        <ValidationMessage For="@(() => project.State)" />
        
    </div>
    <div class="form-group row">
        <label for="assignedTo">Assigned To</label>
        
    </div>
    <div class="form-group row">
        <button type="submit" class="btn btn-primary">@btnMsg</button>
        <button type="button" class="btn btn-danger" @onclick="DeleteProject">Delete</button>
    </div>
</EditForm>
<div class="text-danger">
    <span>@errorMessage</span>
</div>



@code {
    [Parameter]
    public int? Id { get; set; }
    string errorMessage = string.Empty;
    private string btnMsg = string.Empty;
    Project? project = null;

    protected override async Task OnInitializedAsync()
    {
        btnMsg = Id == null ? "Save New Form" : "Update Form";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            project = new Project();
        }
        else
        {
            project = await ProjectService.GetSingleProject((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            try
            {
                await ProjectService.CreateProject(project);
            }catch (Exception ex)
            {
                errorMessage = "You did not fill out all of the required inputs on this form. ";
            }

        }
        else
        {
            await ProjectService.UpdateProject(project);
        }
    }

    async Task DeleteProject()
    {
        await ProjectService.DeleteProject(project.Id);
    }
}
