@page "/projects"
@inject IProjectService ProjectService
@inject NavigationManager NavigationManager
@implements IDisposable

<PageTitle>Projects</PageTitle>

<h3>Projects</h3>
@foreach (var project in ProjectService.Projects)
{
    <div class="my-2">
        <div class="card" style="width: 35rem;">
            <div class="card-body">
                <h5 class="card-title">@project.Name</h5>
                <h6 class="card-subtitle">@project.Status</h6>
                <p class="card-text">Address: @project.AddressName, @project.City, @project.State</p>
                <button class="btn btn-outline-primary" @onclick="(() => ShowProject(project.Id))"><i class="oi oi-pencil"></i></button>
                <button class="btn btn-outline-danger">Delete</button>
            </div>
        </div>
    </div>
}
<button class="btn btn-primary" @onclick="CreateProject">Add Project</button>
@code {
    protected override async Task OnInitializedAsync()
    {
        await ProjectService.GetProjects();

    }

    //Added OnInit and Dispose
    protected override void OnInitialized()
    {
        ProjectService.ProjectsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProjectService.ProjectsChanged -= StateHasChanged;
    }

    void ShowProject(int id)
    {
        NavigationManager.NavigateTo($"project/{id}");
    }

    void CreateProject()
    {
        NavigationManager.NavigateTo("/project");
    }
}
